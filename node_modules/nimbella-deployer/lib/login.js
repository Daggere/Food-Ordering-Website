"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.doInteractiveLogin=exports.doAdminLogin=exports.doLogin=void 0;const credentials_1=require("./credentials"),createDebug=require("debug"),util_1=require("./util"),debug=createDebug("nimbella.cli"),AUTHORIZE_URL_PATH="/api/v1/web/nimbella/user/authorize.json",DEFAULT_API_HOST="https://apigcp.nimbella.io";async function doLogin(e,r,t=DEFAULT_API_HOST){const i=t+AUTHORIZE_URL_PATH+"?token="+e,n=await util_1.wskRequest(i);if(n.statusCode>=400)throw new Error("The provided token is invalid");const o=n.body?n.body:{error:"unexpected response"};if(o.status){if("failed"===o.status)throw new Error("The Nimbella Service responded '"+(o.error||"unknown failure")+"'");{debug("authorize response: %O",o);const e=o.uuid+":"+o.key,t=await credentials_1.addCredentialAndSave(o.apihost,e,o.storage,o.redis,r,o.namespace,!0);return r.saveLegacyInfo(o.apihost,e),t}}throw new Error("The response from the Nimbella service was ill-formed")}function doAdminLogin(e){return new Promise((function(r,t){process.stdin.setEncoding("utf8");let i="";process.stdin.on("readable",()=>{let e=process.stdin.read();for(;null!=e;)i+=e,e=process.stdin.read()}),process.stdin.on("end",async()=>{const n=JSON.parse(i);n.namespace&&n.key&&n.uuid||t(new Error(`Improper administrative login.  Expected valid user info but got '${i}'`));const o=n.uuid+":"+n.key,s=await credentials_1.addCredentialAndSave(e,o,n.storage,!!n.redis,credentials_1.fileSystemPersister,n.namespace,!0);credentials_1.fileSystemPersister.saveLegacyInfo(e,o),r(s)}),process.stdin.on("error",t)}))}async function doInteractiveLogin(e,r){const{apihost:t,namespace:i,uuid:n,key:o,redis:s,storage:a,externalId:d}=e,c=n+":"+o,u=await r.loadCredentialStore(),l=credentials_1.addCredential(u,t,i,c,a,s);return d&&d.name&&d.key&&(u.github||(u.github={}),u.github[d.name]=d.key,u.currentGithub=d.name),r.saveCredentialStore(u),l}exports.doLogin=doLogin,exports.doAdminLogin=doAdminLogin,exports.doInteractiveLogin=doInteractiveLogin;
