import { DeployStructure, DeployResponse, ActionSpec, PackageSpec, WebResource, BucketSpec, DeployerAnnotation, VersionEntry, ProjectReader, OWOptions } from './deploy-struct';
import * as openwhisk from 'openwhisk';
import { Bucket } from '@google-cloud/storage';
export declare function cleanOrLoadVersions(todeploy: DeployStructure): Promise<DeployStructure>;
export declare function doDeploy(todeploy: DeployStructure): Promise<DeployResponse>;
export declare function cleanPackage(client: openwhisk.Client, name: string, versions: VersionEntry): Promise<openwhisk.Package>;
export declare function deployWebResource(res: WebResource, actionWrapPackage: string, spec: BucketSpec, bucketClient: Bucket, versions: VersionEntry, webLocal: string, reader: ProjectReader, owOptions: OWOptions): Promise<DeployResponse>;
export declare function actionWrap(res: WebResource, reader: ProjectReader): Promise<ActionSpec>;
export declare function deployPackage(pkg: PackageSpec, wsk: openwhisk.Client, deployerAnnot: DeployerAnnotation, projectParams: openwhisk.Dict, projectEnv: openwhisk.Dict, namespaceIsClean: boolean, versions: VersionEntry, reader: ProjectReader): Promise<DeployResponse>;
