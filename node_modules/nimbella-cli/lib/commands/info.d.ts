import { flags } from '@oclif/command';
import { NimBaseCommand, NimLogger } from 'nimbella-deployer';
export default class Info extends NimBaseCommand {
    static description: string;
    static flags: {
        debug: flags.IOptionFlag<string>;
        verbose: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        license: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        changes: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        runtimes: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        limits: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        apihost: flags.IOptionFlag<string>;
    };
    static args: any[];
    runCommand(rawArgv: string[], argv: string[], args: any, flags: any, logger: NimLogger): Promise<void>;
    displayAncillary(topic: string, logger: NimLogger): Promise<void>;
    displayRuntimes(sysinfo: Record<string, any>, logger: NimLogger): Promise<void>;
    displayLimits(sysinfo: Record<string, any>, logger: NimLogger): Promise<void>;
    formatUnits(limitName: string, limitValue: number): string;
    getSystemInfo(apihost: string, logger: NimLogger): Promise<any>;
}
