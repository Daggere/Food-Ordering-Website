"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const nimbella_deployer_1=require("nimbella-deployer"),command_1=require("@oclif/command"),nimbella_deployer_2=require("nimbella-deployer");class AuthInspect extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,o,a,t,n){let{all:s,name:l,apihost:i,auth:r,web:c,storage:d,redis:m,project:p,production:u}=t;s?l=i=r=c=d=m=p=u=!0:i||r||c||d||m||p||u||(l=!0);const b=await nimbella_deployer_2.getCredentials(nimbella_deployer_2.authPersister).catch(e=>n.handleError("",e)),h={};l&&(h.name=b.namespace),i&&(h.apihost=b.ow.apihost),r&&(h.auth=b.ow.api_key),c&&(b.storageKey?h.web="https://"+nimbella_deployer_2.computeBucketDomainName(b.ow.apihost,b.namespace):h.web="Not available, upgrade your account."),d&&(h.storage=!!b.storageKey),m&&(h.redis=b.redis),p&&(h.project=b.project),u&&(h.production=b.production),1==Object.keys(h).length?n.log(String(Object.values(h)[0])):n.log(JSON.stringify(h,null,2))}}exports.default=AuthInspect,AuthInspect.description="Get current namespace with optional details",AuthInspect.flags=Object.assign({name:command_1.flags.boolean({description:"Show namespace name"}),apihost:command_1.flags.boolean({description:"Show API host"}),auth:command_1.flags.boolean({description:"Show API key"}),web:command_1.flags.boolean({description:"Show web domain (if available)"}),storage:command_1.flags.boolean({description:"Show storage status"}),redis:command_1.flags.boolean({description:"Show redis status"}),project:command_1.flags.boolean({description:"Show owning project"}),production:command_1.flags.boolean({description:"Show production status"}),all:command_1.flags.boolean({description:"Show all fields"})},nimbella_deployer_1.NimBaseCommand.flags),AuthInspect.args=[];
