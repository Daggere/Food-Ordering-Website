"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),ui_1=require("../../ui");class AuthLogout extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,o,a,t,l){t.all&&t.apihost&&o.length>0&&l.handleError("Cannot combine '--all' and '--apihost' with explicit namespace names");let s=nimbella_deployer_1.parseAPIHost(t.apihost);if(s&&0===o.length&&!t.all&&l.handleError("Cannot specify an API host without also specifying the namespace or the '--all' flag."),t.all&&0==o.length)return this.logoutAll(s,l);if(0===o.length){const e=await nimbella_deployer_2.getCredentials(nimbella_deployer_2.authPersister).catch(e=>l.handleError("",e));return"yes"!==await ui_1.prompt(`Type 'yes' to logout '${e.namespace}' namespace on API host '${e.ow.apihost}'`)?void l.log("Doing nothing."):await this.doLogout(e.namespace,e.ow.apihost,l)}for(const e of o)if(t.all){const o=await nimbella_deployer_2.getApiHosts(nimbella_deployer_2.authPersister);for(const a of o){const o=await nimbella_deployer_1.disambiguateNamespace(e,a).catch(e=>l.handleError("",e));await this.doLogout(o,a,l)}}else{const o=await nimbella_deployer_1.disambiguateNamespace(e,s).catch(e=>l.handleError("",e));await this.doLogout(o,s,l)}}async doLogout(e,o,a){const t=await nimbella_deployer_2.forgetNamespace(e,o,nimbella_deployer_2.authPersister,new nimbella_deployer_1.NimFeedback(a)).catch(e=>a.handleError("",e));a.log(`Ok.  Removed the namespace '${e}' on host '${t.ow.apihost}' from the credential store`),a.log(`Successful logout from namespace '${e}' on API host '${t.ow.apihost}'`)}async logoutAll(e,o){const a=e?"all namespaces on API host "+e:"all namespaces, leaving you with no namespaces";if("yes"!==await ui_1.prompt("Type 'yes' to logout "+a))return void o.log("Doing nothing.");let t=await nimbella_deployer_2.getCredentialList(nimbella_deployer_2.authPersister);e&&(t=t.filter(o=>o.apihost===e));for(const e of t)await this.doLogout(e.namespace,e.apihost,o)}}exports.default=AuthLogout,AuthLogout.description="Drop access to Nimbella namespaces",AuthLogout.flags=Object.assign({apihost:command_1.flags.string({description:"API host serving the namespace(s)"}),all:command_1.flags.boolean({description:"log out of all namespaces (or, all on the given API host)"})},nimbella_deployer_1.NimBaseCommand.flags),AuthLogout.args=[{name:"namespace",description:"The namespace(s) you are dropping",required:!1}],AuthLogout.strict=!1,AuthLogout.aliases=["logout"];
