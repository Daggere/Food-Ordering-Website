"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),ui_1=require("../../ui"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),clients_1=require("../../storage/clients");class WebContentDelete extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,t,n,a,o){const{client:r}=await clients_1.getWebStorageClient(n,a,nimbella_deployer_2.authPersister);r||o.handleError(`Couldn't get to the web storage, ensure it's enabled for the ${n.namespace||"current"} namespace`),await this.deleteFile(n.webContentName,r,o).catch(e=>o.handleError("",e))}async deleteFile(e,t,n){const a=await ui_1.spinner();a.start("searching "+e,"deleting",{stdout:!0}),await t.file(e).delete().then(e=>a.stop("done"))}}exports.default=WebContentDelete,WebContentDelete.description="Deletes Content from the Web Storage",WebContentDelete.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace to delete web content from"})},nimbella_deployer_1.NimBaseCommand.flags),WebContentDelete.args=[{name:"webContentName",description:"The web content to be deleted",required:!0},{name:"namespace",description:"The namespace to delete content from (current namespace if omitted)",required:!1}];
