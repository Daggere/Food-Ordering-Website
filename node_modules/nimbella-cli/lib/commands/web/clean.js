"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),ui_1=require("../../ui"),nimbella_deployer_1=require("nimbella-deployer"),clients_1=require("../../storage/clients"),ui_2=require("../../ui"),nimbella_deployer_2=require("nimbella-deployer");class WebContentClean extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,t,n,o,a){if(!o.force){if("yes"!==await ui_2.prompt("Type 'yes' to remove all content from web storage"))return void a.log("Doing nothing.")}const{client:r,creds:i}=await clients_1.getWebStorageClient(n,o,nimbella_deployer_2.authPersister);r||a.handleError(`Couldn't get to the web storage, ensure it's enabled for the ${n.namespace||"current"} namespace`),await this.cleanup(r,i.ow,a).catch(e=>a.handleError("",e))}async cleanup(e,t,n){const o=await ui_1.spinner();o.start("deleting web content","",{stdout:!0}),await e.deleteFiles().then(n=>nimbella_deployer_2.restore404Page(e,t)).then(e=>o.stop("done")).catch(e=>n.handleError("",e))}}exports.default=WebContentClean,WebContentClean.description="Deletes all Content from Web Storage",WebContentClean.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace to delete content from"}),force:command_1.flags.boolean({char:"f",description:"Just do it, omitting confirmatory prompt"})},nimbella_deployer_1.NimBaseCommand.flags),WebContentClean.args=[{name:"namespace",description:"The namespace to delete web content from (current namespace if omitted)",required:!1}];
