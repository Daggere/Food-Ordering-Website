"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const nimbella_deployer_1=require("nimbella-deployer"),command_1=require("@oclif/command"),AioCommand=require("@adobe/aio-cli-plugin-runtime/src/commands/runtime/package/delete"),nimbella_deployer_2=require("nimbella-deployer");class PackageDelete extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,a,i,o,r){o.recursive?(this.debug("invoking recursive delete"),await this.recursiveDelete(i,o,r)):(this.debug("usual delegation to aio"),await this.runAio(e,a,i,o,r,AioCommand))}async recursiveDelete(e,a,i){const o=await nimbella_deployer_2.getCredentials(nimbella_deployer_2.authPersister).catch(e=>i.handleError("",e)),r=a.auth||(o?o.ow.api_key:void 0),t=a.apihost||(o?o.ow.apihost:void 0);r&&t||i.handleError("You must either have current namespace or else provide --auth and --apihost");const s=await nimbella_deployer_2.wipePackage(e.packageName,t,r);a.json&&AioCommand.logJSON("",s)}}exports.default=PackageDelete,PackageDelete.args=AioCommand.args,PackageDelete.flags=Object.assign({recursive:command_1.flags.boolean({description:"Delete the contained actions",char:"r"}),apihost:command_1.flags.string({description:"Whisk API host"}),auth:command_1.flags.string({char:"u",description:"Whisk auth"})},AioCommand.flags),PackageDelete.description=AioCommand.description;
