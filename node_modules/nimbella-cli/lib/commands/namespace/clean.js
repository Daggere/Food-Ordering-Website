"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),storage_1=require("@google-cloud/storage"),ui_1=require("../../ui");class NamespaceClean extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,a,o,t,n){let i,s,r,l=o.namespace,m=void 0;if(l?l=await nimbella_deployer_1.disambiguateNamespace(l,t.apihost):(m=await nimbella_deployer_2.getCredentials(nimbella_deployer_2.authPersister).catch(e=>n.handleError("",e)),l=m.namespace),!t.force){const e=t.justwhisk?" openwhisk":"";if("yes"!==await ui_1.prompt(`Type 'yes' to remove all${e} content from namespace '${l}'`))return void n.log("Doing nothing.")}if(t.auth&&t.apihost?(i=t.auth,s=nimbella_deployer_1.parseAPIHost(t.apihost),r=void 0):(m||(m=await nimbella_deployer_2.getCredentialsForNamespace(l,nimbella_deployer_1.parseAPIHost(t.apihost),nimbella_deployer_2.authPersister).catch(e=>n.handleError("",e))),i=m.ow.api_key,s=m.ow.apihost,r=m.storageKey),await nimbella_deployer_2.wipeNamespace(s,i),n.log(`OpenWhisk entities removed from namespace '${l}' on host '${s}'`),t.justwhisk||!r)return;const p=nimbella_deployer_2.computeBucketStorageName(s,l),c=new storage_1.Storage(r).bucket(p),d=await nimbella_deployer_2.cleanBucket(c,void 0,m.ow);d&&n.log(d),n.log("Web content removed from https://"+p)}}exports.default=NamespaceClean,NamespaceClean.description="Remove content from a namespace",NamespaceClean.flags=Object.assign({justwhisk:command_1.flags.boolean({description:"Remove only OpenWhisk entities, leaving other content"}),force:command_1.flags.boolean({description:"Just do it, omitting confirmatory prompt"}),apihost:command_1.flags.string({description:"The API host of the namespace to be cleaned"}),auth:command_1.flags.string({char:"u",description:"The API key for the namespace to be cleaned"})},nimbella_deployer_1.NimBaseCommand.flags),NamespaceClean.args=[{name:"namespace",description:"The namespace to clean (current namespace if omitted)",required:!1}];
