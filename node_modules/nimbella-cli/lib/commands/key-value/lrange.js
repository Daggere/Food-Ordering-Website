"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),key_value_1=require("../../storage/key-value"),queryCommand="redis/lrange";class LRange extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,r,a,n,t){await key_value_1.queryKVStore(queryCommand,a,n,nimbella_deployer_2.authPersister).then(e=>{e.value.forEach(e=>{t.log(e)})}).catch(e=>{var r,a,n;return t.handleError((null===(n=null===(a=null===(r=e.error)||void 0===r?void 0:r.response)||void 0===a?void 0:a.result)||void 0===n?void 0:n.error)||e.message)})}}exports.default=LRange,LRange.description="Returns the specified elements of the list stored at key. The offsets start and stop are zero-based indexes, with 0 being the first element of the list, 1 being the next element and so on.",LRange.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace to list keys from"})},nimbella_deployer_1.NimBaseCommand.flags),LRange.args=[{name:"key",description:"The key to be queried",required:!0},{name:"start",description:"The index to start",required:!0},{name:"stop",description:"The index to stop",required:!0}],LRange.aliases=["kv:lrange"];
