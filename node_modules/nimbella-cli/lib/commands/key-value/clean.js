"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),key_value_1=require("../../storage/key-value"),ui_1=require("../../ui"),queryCommand="redis/flush";class Clean extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,o,l,r,a){if(!r.force){if("yes"!==await ui_1.prompt("Type 'yes' to remove all content from Key-Value Store"))return void a.log("Doing nothing.")}l.flush=!0,await key_value_1.queryKVStore(queryCommand,l,r,nimbella_deployer_2.authPersister).then(e=>{e.value?a.log("all content cleared"):a.log("couldn't clear content")}).catch(e=>{var o,l,r;return a.handleError((null===(r=null===(l=null===(o=e.error)||void 0===o?void 0:o.response)||void 0===l?void 0:l.result)||void 0===r?void 0:r.error)||e.message)})}}exports.default=Clean,Clean.description="Clears the Key Value Store, be cautious!",Clean.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace"}),force:command_1.flags.boolean({char:"f",description:"Just do it, omitting confirmatory prompt"})},nimbella_deployer_1.NimBaseCommand.flags),Clean.aliases=["kv:clean"];
