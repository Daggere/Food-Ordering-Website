"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),key_value_1=require("../../storage/key-value"),queryCommand="redis/rpush";class RPush extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,r,a,s,l){await key_value_1.queryKVStore(queryCommand,a,s,nimbella_deployer_2.authPersister).then(e=>l.log(e.value)).catch(e=>{var r,a,s;return l.handleError((null===(s=null===(a=null===(r=e.error)||void 0===r?void 0:r.response)||void 0===a?void 0:a.result)||void 0===s?void 0:s.error)||e.message)})}}exports.default=RPush,RPush.description="Insert all the specified values at the tail of the list stored at key. It is created as an empty list before performing the push operation if the key does not exist. An error is returned when key holds such a value that is not a list",RPush.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace"})},nimbella_deployer_1.NimBaseCommand.flags),RPush.args=[{name:"key",description:"The key to be added at",required:!0},{name:"value",description:"The value to be added",required:!0}],RPush.aliases=["kv:rpush"];
