"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),key_value_1=require("../../storage/key-value"),queryCommand="redis/setMany";class SetMany extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,a,r,t,n){await key_value_1.queryKVStore(queryCommand,r,t,nimbella_deployer_2.authPersister).then(e=>n.log(e.value)).catch(e=>{var a,r,t;return n.handleError((null===(t=null===(r=null===(a=e.error)||void 0===a?void 0:a.response)||void 0===r?void 0:r.result)||void 0===t?void 0:t.error)||e.message)})}}exports.default=SetMany,SetMany.description="Set Value for a Key",SetMany.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace to list keys from"})},nimbella_deployer_1.NimBaseCommand.flags),SetMany.args=[{name:"keyPrefix",description:"The key to be set at"},{name:"valuePrefix",description:"The value to be set"},{name:"startIndex",description:"The index to start at"},{name:"count",description:"The count to run to from start"}],SetMany.aliases=["kv:setMany","kv:setmany"];
