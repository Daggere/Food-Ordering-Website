"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),ui_1=require("../../ui"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),clients_1=require("../../storage/clients"),ui_2=require("../../ui");class ObjectClean extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,t,a,o,r){if(!o.force){if("yes"!==await ui_2.prompt("Type 'yes' to remove all objects from Object Store"))return void r.log("Doing nothing.")}const{client:n}=await clients_1.getObjectStorageClient(a,o,nimbella_deployer_2.authPersister);n||r.handleError(`Couldn't get to the object store, ensure it's enabled for the ${a.namespace||"current"} namespace`),await this.cleanup(n,r).catch(e=>r.handleError("",e))}async cleanup(e,t){const a=await ui_1.spinner();a.start("deleting objects","",{stdout:!0}),await e.deleteFiles().then(e=>a.stop("done"))}}exports.default=ObjectClean,ObjectClean.description="Deletes all objects from the Object Store",ObjectClean.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace to delete objects from"}),force:command_1.flags.boolean({char:"f",description:"Just do it, omitting confirmatory prompt"})},nimbella_deployer_1.NimBaseCommand.flags),ObjectClean.args=[{name:"namespace",description:"The namespace to delete objects from (current namespace if omitted)",required:!1}];
