"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const command_1=require("@oclif/command"),nimbella_deployer_1=require("nimbella-deployer"),nimbella_deployer_2=require("nimbella-deployer"),clients_1=require("../../storage/clients"),util_1=require("../../storage/util");class ObjectsList extends nimbella_deployer_1.NimBaseCommand{async runCommand(e,t,a,i,s){const{client:r}=await clients_1.getObjectStorageClient(a,i,nimbella_deployer_2.authPersister);r||s.handleError(`Couldn't get to the object store, ensure it's enabled for the ${i.namespace||"current"} namespace`),await this.listFiles(r,s,i.long,a.prefix).catch(e=>s.handleError("",e))}async listFiles(e,t,a,i){const[s]=await e.getFiles({prefix:i});if(0===s.length)return t.log("No object available "+(i?`matching prefix '${i}'`:""));a?await util_1.fileMetaLong(s,e,t).catch(e=>t.handleError(e)):await util_1.fileMetaShort(s,e,t).catch(e=>t.handleError(e))}}exports.default=ObjectsList,ObjectsList.description="Lists Objects from Object Store",ObjectsList.flags=Object.assign({apihost:command_1.flags.string({description:"API host of the namespace to list objects from"}),long:command_1.flags.boolean({char:"l",description:"Displays additional object info such as last update, owner and md5hash"}),namespace:command_1.flags.string({description:"The namespace to list objects from (current namespace if omitted)"})},nimbella_deployer_1.NimBaseCommand.flags),ObjectsList.args=[{name:"prefix",description:"Prefix to match objects against",required:!1,default:""}];
