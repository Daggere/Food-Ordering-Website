"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getCredentialsToken=exports.doOAuthFlow=exports.isGithubProvider=exports.isFullCredentials=void 0;const querystring=require("querystring"),nimbella_deployer_1=require("nimbella-deployer"),ui_1=require("./ui"),makeDebug=require("debug"),debug=makeDebug("nim:oauth"),DEFAULT_APIHOST="https://apigcp.nimbella.io",NAMESPACE="nimbella",TOKENIZER="/user/tokenizer",LOGIN="/user/login",PROGRESS="/user/progress";function loginHtml(e){return`<html>\n<head>\n  <meta charset="utf-8"/>\n  <style>\n    html{font-family:sans-serif;background:#0e1e25}body{overflow:hidden;position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;width:100vw;}h3{margin:0}.card{position:relative;display:flex;flex-direction:column;width:75%;max-width:364px;padding:24px;background:white;color:rgb(14,30,37);border-radius:8px;box-shadow:0 2px 4px 0 rgba(14,30,37,.16);}\n  </style>\n</head>\n<body>\n  <div class='card'>\n    <h3>Logged In</h3>\n    <p>\n      You're now logged into Nimbella CLI with your ${e||""} credentials. Please close this window.\n    </p>\n  </div>\n</body></html>`}function provisioningHtml(e,r,n){return`<html>\n<head>\n  <meta charset="utf-8"/>\n  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"\n        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">\n  <style>\n    html {\n      font-family:sans-serif;\n      background:#0e1e25;\n    }\n    body {\n      overflow:hidden;position:relative;\n      display:flex;\n      flex-direction:column;\n      align-items:center;\n      justify-content:center;height:100vh;\n      width:100vw;\n      background:#0e1e25;\n    }\n    h3 {\n      margin:0;\n    }.card {\n      position:relative;\n      display:flex;\n      flex-direction:column;\n      width:60%;\n      padding:24px;\n      background:white;\n      color:rgb(14,30,37);\n      border-radius:8px;\n      box-shadow:0 2px 4px 0 rgba(14,30,37,.16);\n    }\n\n    .progress-wrap { padding: 15px 50px 25px 15px; margin-bottom: 1rem; flex-direction: row; align-items: center; }\n    .progress-wrap .progress-info { display: flex; flex-direction: column; flex: 1; }\n    .progress-wrap .progress-info span { margin-top: -4px; padding-bottom: 10px; }\n    .progress-wrap .progress-info .progress { height: 7px; background-color: #ffffff; }\n    .progress-wrap .progress-info .progress .progress-bar{ background-color: #00afe4 !important; }\n\n    .sk-fading-circle {width: 20px;height: 20px;position: relative;margin-right: 10px;}\n    .sk-fading-circle .sk-circle {width: 100%;height: 100%;position: absolute;left: 0;top: 0;}\n    .sk-fading-circle .sk-circle:before {content: '';display: block;margin: 0 auto;width: 22%;height: 22%;background-color: #748082;border-radius: 100%;-webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;}\n    .sk-fading-circle .sk-circle2 {-webkit-transform: rotate(30deg);-ms-transform: rotate(30deg);transform: rotate(30deg);}\n    .sk-fading-circle .sk-circle3 {-webkit-transform: rotate(60deg);-ms-transform: rotate(60deg);transform: rotate(60deg);}\n    .sk-fading-circle .sk-circle4 {-webkit-transform: rotate(90deg);-ms-transform: rotate(90deg);transform: rotate(90deg);}\n    .sk-fading-circle .sk-circle5 {-webkit-transform: rotate(120deg);-ms-transform: rotate(120deg);transform: rotate(120deg);}\n    .sk-fading-circle .sk-circle6 {-webkit-transform: rotate(150deg);-ms-transform: rotate(150deg);transform: rotate(150deg);}\n    .sk-fading-circle .sk-circle7 {-webkit-transform: rotate(180deg);-ms-transform: rotate(180deg);transform: rotate(180deg);}\n    .sk-fading-circle .sk-circle8 {-webkit-transform: rotate(210deg);-ms-transform: rotate(210deg);transform: rotate(210deg);}\n    .sk-fading-circle .sk-circle9 {-webkit-transform: rotate(240deg);-ms-transform: rotate(240deg);transform: rotate(240deg);}\n    .sk-fading-circle .sk-circle10 {-webkit-transform: rotate(270deg);-ms-transform: rotate(270deg);transform: rotate(270deg);}\n    .sk-fading-circle .sk-circle11 {-webkit-transform: rotate(300deg);-ms-transform: rotate(300deg);transform: rotate(300deg);}\n    .sk-fading-circle .sk-circle12 {-webkit-transform: rotate(330deg);-ms-transform: rotate(330deg);transform: rotate(330deg);}\n    .sk-fading-circle .sk-circle2:before {-webkit-animation-delay: -1.1s;animation-delay: -1.1s;}\n    .sk-fading-circle .sk-circle3:before {-webkit-animation-delay: -1s;animation-delay: -1s;}\n    .sk-fading-circle .sk-circle4:before {-webkit-animation-delay: -0.9s;animation-delay: -0.9s;}\n    .sk-fading-circle .sk-circle5:before {-webkit-animation-delay: -0.8s;animation-delay: -0.8s;}\n    .sk-fading-circle .sk-circle6:before {-webkit-animation-delay: -0.7s;animation-delay: -0.7s;}\n    .sk-fading-circle .sk-circle7:before {-webkit-animation-delay: -0.6s;animation-delay: -0.6s;}\n    .sk-fading-circle .sk-circle8:before {-webkit-animation-delay: -0.5s;animation-delay: -0.5s;}\n    .sk-fading-circle .sk-circle9:before {-webkit-animation-delay: -0.4s;animation-delay: -0.4s;}\n    .sk-fading-circle .sk-circle10:before {-webkit-animation-delay: -0.3s;animation-delay: -0.3s;}\n    .sk-fading-circle .sk-circle11:before {-webkit-animation-delay: -0.2s;animation-delay: -0.2s;}\n    .sk-fading-circle .sk-circle12:before {-webkit-animation-delay: -0.1s;animation-delay: -0.1s;}\n\n    @-webkit-keyframes sk-circleFadeDelay {\n      0%, 39%, 100% { opacity: 0; }\n      40% { opacity: 1; }\n    }\n\n    @keyframes sk-circleFadeDelay {\n      0%, 39%, 100% { opacity: 0; }\n      40% { opacity: 1; }\n    }\n  </style>\n  <script>\n    function handleResponse(res) {\n      if (res.ok) {\n        return res.json()\n      } else {\n        try {\n          let error = res.statusText || 'error'\n          error['response'] = res\n          return { error, statusCode: res.status }\n        } catch (err) {}\n      }\n    }\n\n    try {\n      let eleProgress\n      let eleStatus\n      let retries = 0\n\n      const retryInterval = 2000\n      const maxWait = 70000\n      const maxRetries = Math.ceil(maxWait / retryInterval)\n\n      const interval = setInterval(() => {\n        fetch('${r}/${n}')\n          .then(handleResponse)\n          .then(res => {\n            if (res && res.error) {\n              clearInterval(interval)\n              console.error(res.statusCode, res.error)\n              window.location.replace(window.location.origin + window.location.pathname + '?error=' + res.error)\n            } else if (res && res.progress) {\n              const { progress, status, ok } = res\n\n              eleProgress = eleProgress || document.getElementById('progress_bar')\n              eleProgress.style.width = progress + '%'\n\n              let statusMsg = status.split(' ')[0]\n              switch (statusMsg) {\n                case 'functions': statusMsg = 'Compute engine'; break\n                case 'key-value': statusMsg = 'Integrated key-value store'; break\n                case 'storage': statusMsg = 'Object store and CDN'; break\n                default: statusMsg = ''\n              }\n\n              if (statusMsg && ok) {\n                eleStatus = eleStatus || document.getElementById('progress_status')\n                eleStatus.textContent = statusMsg + ' ready...'\n              }\n\n              if (progress >= 100 || retries++ >= maxRetries) {\n                clearInterval(interval)\n                window.location.replace('${e}')\n              }\n            }\n          })\n      }, retryInterval)\n    } catch (err) {\n      console.log(err)\n    }\n  <\/script>\n</head>\n<body>\n  <div class="progress-wrap card">\n    <div class="sk-fading-circle">\n    <div class="sk-circle1 sk-circle"></div>\n    <div class="sk-circle2 sk-circle"></div>\n    <div class="sk-circle3 sk-circle"></div>\n    <div class="sk-circle4 sk-circle"></div>\n    <div class="sk-circle5 sk-circle"></div>\n    <div class="sk-circle6 sk-circle"></div>\n    <div class="sk-circle7 sk-circle"></div>\n    <div class="sk-circle8 sk-circle"></div>\n    <div class="sk-circle9 sk-circle"></div>\n    <div class="sk-circle10 sk-circle"></div>\n    <div class="sk-circle11 sk-circle"></div>\n    <div class="sk-circle12 sk-circle"></div>\n  </div>\n  <div class="progress-info">\n    <h3>Configuring your Cloud.</h3>This should complete in approximately 60 seconds.\n    <p style="margin-top: 5px;">\n      <span id="progress_status"></span>\n    </p>\n    <div class="progress">\n      <div class="progress-bar" id="progress_bar" style="background-color: #4197a7" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>\n      </div>\n    </div>\n  </div>\n</body></html>`}function isFullCredentials(e){return!0!==e&&"status"in e&&"success"===e.status}function isGithubProvider(e){return 1!=e&&"provider"in e&&"github"===e.provider.toLowerCase()}function providerFromResponse(e){return!0===e?"":isFullCredentials(e)?e.externalId?e.externalId.provider:"":e.provider}function getAPIUrl(e,r){return`https://${e}-${new URL(r).hostname}/api`}function wbReentry(){const{host:e,protocol:r,pathname:n}=window.location;return`${r}//${e}${n}`}async function doOAuthFlow(e,r,n){let t,i;const s=new Promise((function(e,r){t=e,i=r})),o={provider:r?"github":void 0,redirect:!nimbella_deployer_1.inBrowser||wbReentry()};let a;const l=getAPIUrl(NAMESPACE,n||DEFAULT_APIHOST)+PROGRESS;if(nimbella_deployer_1.inBrowser)t(!0),o.tokenize=!r;else{const e=require("http").createServer,r=require("get-port"),c=await r({port:3e3});o.port=c;const d=e((function(e,r){const s=querystring.parse(e.url.slice(e.url.indexOf("?")+1));if(s.token){let e;try{const n=Buffer.from(s.token,"base64");e=JSON.parse(n.toString("ascii")),r.end(loginHtml(providerFromResponse(e))),t(e)}catch(e){r.end("Bad request."),i(e)}}else s.id?(a=getAPIUrl(NAMESPACE,n||DEFAULT_APIHOST)+LOGIN+"?"+querystring.stringify(o),r.end(provisioningHtml(a,l,s.id))):s.error?(r.end("Bad request."),i(new Error("Authentication service error. Got invalid parameters for CLI login."))):r.end("Bad request.")})),g=setTimeout(()=>{t(!0)},75e3);s.then(()=>{d&&(d.close(),clearTimeout(g))}).catch(()=>{d&&(d.close(),clearTimeout(g))}),await new Promise((function(e,r){d.on("error",r),d.listen(c,e)}))}a=a||getAPIUrl(NAMESPACE,n||DEFAULT_APIHOST)+LOGIN+"?"+querystring.stringify(o),debug("computed url: %s",a);try{nimbella_deployer_1.inBrowser?window.location.href=a:(e.log("Opening browser to authenticate..."),await ui_1.open(a))}catch(r){e.handleError("Nimbella CLI could not open the browser for you. Please visit this URL in a browser on this device: "+a,r)}return await s}async function getCredentialsToken(e,r,n=!1){debug("getCredentialsToken with input %O",e);const t=getAPIUrl(NAMESPACE,e.apihost)+TOKENIZER+(!0===n?"?ttl=login":"");let i;try{i=await nimbella_deployer_1.wskRequest(t,e.api_key)}catch(e){r.handleError("",e)}return debug("response from tokenizer: %O",i),i.token}exports.isFullCredentials=isFullCredentials,exports.isGithubProvider=isGithubProvider,exports.doOAuthFlow=doOAuthFlow,exports.getCredentialsToken=getCredentialsToken;
